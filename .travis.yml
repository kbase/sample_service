language: python
python: "3.7"
sudo: required

services:
  - docker

env:
    # TODO add more arango versions when they exist
    # TODO could split tests so non-arango tests aren't run for every version
    - ARANGODB_VER=3.5.1 ARANGODB_V=35

before_install:
  - docker version

install:
  # mongo is only a test dependency, no point in matrixing it
  - export MONGODB_VER=mongodb-linux-x86_64-3.6.16
  - cd ..
  - wget http://fastdl.mongodb.org/linux/$MONGODB_VER.tgz
  - tar xfz $MONGODB_VER.tgz
  - export MONGOD=`pwd`/$MONGODB_VER/bin/mongod
  - cd -

  - cd ..
  - curl -O https://download.arangodb.com/arangodb$ARANGODB_V/Community/Linux/arangodb3-linux-$ARANGODB_VER.tar.gz
  - tar -xf arangodb3-linux-$ARANGODB_VER.tar.gz 
  - export ARANGO_EXE=$(pwd)/arangodb3-$ARANGODB_VER/usr/sbin/arangod
  - export ARANGO_JS=$(pwd)/arangodb3-$ARANGODB_VER/usr/share/arangodb3/js/
  - cd -

  - pip install pipenv
  - pipenv install --dev
  - docker pull kbase/kb-sdk
  - cd ..
  - docker run kbase/kb-sdk genscript > kb-sdk
  - export KBSDK=$(pwd)/kb-sdk
  - chmod a+x $KBSDK
  - cd -
  - $KBSDK version

  - cd test
  - cp test.cfg.example test.cfg
  - sed -i "s#^test.temp.dir=.*#test.temp.dir=temp_test_dir#" test.cfg
  - sed -i "s#^test.arango.exe.*#test.arango.exe=$ARANGO_EXE#" test.cfg
  - sed -i "s#^test.arango.js.*#test.arango.js=$ARANGO_JS#" test.cfg
  - sed -i "s#^test.mongo.exe.*#test.mongo.exe=$MONGOD#" test.cfg
  - sed -i "s#^test.mongo.wired_tiger.*#test.mongo.wired_tiger=true#" test.cfg
  - cat test.cfg
  - cd -

script:
  - $KBSDK validate
  - make test-sdkless
  # TODO make tests for the full stack with local auth, ws

after_success:
  - coveralls
