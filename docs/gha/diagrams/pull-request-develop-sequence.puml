@startuml

actor Developer
box GitHub #LightBlue
participant "GitHub UI" as GH
participant "Controlling Workflow\npull-request-develop.yml" as Workflow
participant "Reusable Test Workflow\nreusable_test-python.yml" as TestWorkflow
participant "Reusable Build Workflow\nreusable_build.yml" as BuildWorkflow
end box
participant CodeCov

title Pull Request to ""develop"" opened, reopened, or synchronized

== Invoke ==
alt Create PR
Developer -> GH: Create PR against ""develop""
GH -> GH: emits event\n ""pull_request"" ""opened""
else Reopen PR
Developer -> GH: Reopen closed PR
GH -> GH: emits event\n ""pull_request"" ""reopened""
else Update PR source branch
Developer -> GH: Push commits to source branch for PR
GH -> GH: emits event\n ""pull_request"" ""synchronize""
end


GH -[#blue]> Workflow: Runs\n if event matches

activate Workflow
Workflow -[#blue]> TestWorkflow: Runs

== Test ==
activate TestWorkflow
TestWorkflow -[#red]> Workflow : if any test fails\nexit with error
Workflow -[#red]> GH: if exit with error\nterminate workflow
GH -[#red]> Developer: show error
TestWorkflow -> "CodeCov": sends coverage
TestWorkflow -[#green]> Workflow: success
deactivate TestWorkflow

Workflow -[#blue]> BuildWorkflow: Runs

== Build ==
activate BuildWorkflow
BuildWorkflow -> BuildWorkflow: build image
BuildWorkflow -[#red]> Workflow: if build fails\nexit with error
Workflow -[#red]> GH: if exit with error\nterminate workflow
GH -[#red]> Developer: show error
BuildWorkflow -[#green]> Workflow:success
deactivate BuildWorkflow

Workflow -[#green]> GH:success

deactivate Workflow
GH -[#green]> Developer: show success

@enduml